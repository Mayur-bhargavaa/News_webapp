{"ast":null,"code":"var _jsxFileName = \"G:\\\\Innorik\\\\src\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport LoadingSpinner from \"./loader\";\nimport { Form, Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const [showGoogleLogin, setShowGoogleLogin] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  let easing = [0.6, -0.05, 0.01, 0.99];\n  const animate = {\n    opacity: 1,\n    y: 0,\n    transition: {\n      duration: 0.6,\n      ease: easing,\n      delay: 0.16\n    }\n  };\n  const handleLogin = async () => {\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const response = await axios.post(\"http://localhost:5000/login\", {\n        email,\n        password\n      });\n      const token = response.data.token;\n      localStorage.setItem(\"jwtToken\", token);\n      setIsLoading(false);\n      setEmail(\"\");\n      setPassword(\"\");\n      setError(\"\");\n      navigate(\"/\");\n    } catch (error) {\n      console.error('Login error:', error);\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error('Server response:', error.response.data);\n        console.error('Status code:', error.response.status);\n        console.error('Headers:', error.response.headers);\n\n        // Display an error message to the user based on the server response\n        if (error.response.status === 401) {\n          toast.error(\"Invalid email or password\");\n        } else if (error.response.status === 400) {\n          toast.error(\"Email not verified\");\n        } else {\n          toast.error(\"An error occurred while logging in\");\n        }\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error('No response received from the server');\n        toast.error(\"No response received from the server\");\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Error setting up the request:', error.message);\n        toast.error(\"An error occurred while logging in\");\n      }\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-outline mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"form2Example11\",\n        className: \"form-control\",\n        placeholder: \"Phone number or email address\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        for: \"form2Example11\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-outline mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"form2Example22\",\n        className: \"form-control\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Enter Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        for: \"form2Example22\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center pt-1 mb-5 pb-1\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"gradient-custom-2 my-1\",\n        type: \"button\",\n        onClick: handleLogin,\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 1\n  }, this);\n};\n_s(LoginForm, \"GZJt6i20AeypzNoJcIKFgiSq3Gg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","LoadingSpinner","Form","Link","RouterLink","useNavigate","toast","ToastContainer","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","error","setError","isLoading","setIsLoading","navigate","showGoogleLogin","setShowGoogleLogin","showPassword","setShowPassword","easing","animate","opacity","y","transition","duration","ease","delay","handleLogin","response","post","token","data","localStorage","setItem","console","status","headers","request","message","children","className","type","id","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","for","onClick","_c","$RefreshReg$"],"sources":["G:/Innorik/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport LoadingSpinner from \"./loader\";\r\nimport { Form, Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\nconst LoginForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [showGoogleLogin, setShowGoogleLogin] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  let easing = [0.6, -0.05, 0.01, 0.99];\r\n  const animate = {\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: {\r\n      duration: 0.6,\r\n      ease: easing,\r\n      delay: 0.16,\r\n    },\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n  setIsLoading(true);\r\n  setError(\"\");\r\n  try {\r\n    const response = await axios.post(\"http://localhost:5000/login\", {\r\n      email,\r\n      password,\r\n    });\r\n\r\n    const token = response.data.token;\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    setIsLoading(false);\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setError(\"\");\r\n    navigate(\"/\");\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      console.error('Server response:', error.response.data);\r\n      console.error('Status code:', error.response.status);\r\n      console.error('Headers:', error.response.headers);\r\n\r\n      // Display an error message to the user based on the server response\r\n      if (error.response.status === 401) {\r\n        toast.error(\"Invalid email or password\");\r\n      } else if (error.response.status === 400) {\r\n        toast.error(\"Email not verified\");\r\n      } else {\r\n        toast.error(\"An error occurred while logging in\");\r\n      }\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.error('No response received from the server');\r\n      toast.error(\"No response received from the server\");\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.error('Error setting up the request:', error.message);\r\n      toast.error(\"An error occurred while logging in\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }\r\n};\r\n\r\n  return (\r\n<div>\r\n\r\n                      <div className=\"form-outline mb-4\">\r\n                        <input\r\n                          type=\"email\"\r\n                          id=\"form2Example11\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Phone number or email address\"\r\n                          value={email}\r\n                          onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <label className=\"form-label\" for=\"form2Example11\">\r\n                          Username\r\n                        </label>\r\n                      </div>\r\n\r\n                      <div className=\"form-outline mb-4\">\r\n                        <input\r\n                          type=\"password\"\r\n                          id=\"form2Example22\"\r\n                          className=\"form-control\"\r\n                          value={password}\r\n                          onChange={(e) => setPassword(e.target.value)}\r\n                          placeholder=\"Enter Password\"\r\n                        />\r\n                \r\n                        <label className=\"form-label\" for=\"form2Example22\">\r\n                          Password\r\n                        </label>\r\n                      </div>\r\n\r\n                      <div className=\"text-center pt-1 mb-5 pb-1\">\r\n                        \r\n                          <button\r\n                            className=\"gradient-custom-2 my-1\"\r\n                            type=\"button\"\r\n                            onClick={handleLogin}\r\n                          >\r\n                            Sign in\r\n                          </button>\r\n                      \r\n                     </div>\r\n                 </div>    \r\n \r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}