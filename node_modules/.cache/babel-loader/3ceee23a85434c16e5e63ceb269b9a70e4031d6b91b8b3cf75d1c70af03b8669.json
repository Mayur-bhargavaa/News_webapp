{"ast":null,"code":"var _jsxFileName = \"G:\\\\Innorik\\\\src\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport * as Components from \"./components\";\nimport \"../App.css\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const [signIn, setSignIn] = useState(true);\n  const [redirectToHome, setRedirectToHome] = useState(false);\n  const handleSignInClick = () => {\n    setSignIn(prevSignIn => !prevSignIn);\n  };\n  const handleSignUpClick = () => {\n    setSignIn(prevSignIn => !prevSignIn);\n  };\n  const handleLogin = async () => {\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const response = await axios.post(\"https://innoriknews.onrender.com/login\", {\n        email,\n        password\n      });\n      const token = response.data.token;\n      localStorage.setItem(\"jwtToken\", token);\n      setIsLoading(false);\n      setEmail(\"\");\n      setPassword(\"\");\n      setError(\"\");\n      setRedirectToHome(true);\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      if (error.response) {\n        if (error.response.status === 401) {\n          toast.error(\"Invalid email or password\");\n        } else if (error.response.status === 400) {\n          toast.error(\"Email not verified\");\n        } else {\n          toast.error(\"An error occurred while logging in\");\n        }\n      } else if (error.request) {\n        console.error(\"No response received from the server\");\n        toast.error(\"No response received from the server\");\n      } else {\n        console.error(\"Error setting up the request:\", error.message);\n        toast.error(\"An error occurred while logging in\");\n      }\n      setIsLoading(false);\n    }\n  };\n\n  // Add this at the end of your component\n  useEffect(() => {\n    if (redirectToHome) {\n      navigate(\"/\", {\n        replace: true\n      });\n    }\n  }, [redirectToHome]);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    cpassword: \"\"\n  });\n  const handleSignupFormSubmit = async e => {\n    e.preventDefault(); // Prevent the default form submission behavior\n    setIsLoading(true);\n    try {\n      const response = await axios.post(\"https://innoriknews.onrender.com/signup\", {\n        name: formData.name,\n        email: formData.email,\n        password: formData.password,\n        cpassword: formData.cpassword\n      });\n      console.log(\"Server response:\", response.data);\n      toast.success(\"Signup successful. Please log in.\");\n      navigate(\"/user\");\n      setFormData({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        cpassword: \"\"\n      });\n      setError(\"\");\n    } catch (error) {\n      if (error.response && error.response.status === 409) {\n        toast.error(\"Email already registered\");\n      } else if (error.response && error.response.status === 401) {\n        toast.error(\"Password does not match\");\n      } else {\n        toast.error(\"Error signing up:\", error.message);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 4\n  }, this);\n};\n_s(LoginForm, \"UAEat4yxk0DJ2vspgm5B/Rj+jOg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","toast","Components","ToastContainer","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","error","setError","isLoading","setIsLoading","navigate","signIn","setSignIn","redirectToHome","setRedirectToHome","handleSignInClick","prevSignIn","handleSignUpClick","handleLogin","response","post","token","data","localStorage","setItem","console","status","request","message","replace","formData","setFormData","name","cpassword","handleSignupFormSubmit","e","preventDefault","log","success","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/Innorik/src/components/LoginForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as Components from \"./components\";\r\nimport \"../App.css\"\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst LoginForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [signIn, setSignIn] = useState(true);\r\n  const [redirectToHome, setRedirectToHome] = useState(false);\r\n\r\n  const handleSignInClick = () => {\r\n    setSignIn((prevSignIn) => !prevSignIn);\r\n  };\r\n\r\n  const handleSignUpClick = () => {\r\n    setSignIn((prevSignIn) => !prevSignIn);\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const response = await axios.post(\"https://innoriknews.onrender.com/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      const token = response.data.token;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      setIsLoading(false);\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      setError(\"\");\r\n      setRedirectToHome(true);\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      if (error.response) {\r\n        if (error.response.status === 401) {\r\n          toast.error(\"Invalid email or password\");\r\n        } else if (error.response.status === 400) {\r\n          toast.error(\"Email not verified\");\r\n        } else {\r\n          toast.error(\"An error occurred while logging in\");\r\n        }\r\n      } else if (error.request) {\r\n        console.error(\"No response received from the server\");\r\n        toast.error(\"No response received from the server\");\r\n      } else {\r\n        console.error(\"Error setting up the request:\", error.message);\r\n        toast.error(\"An error occurred while logging in\");\r\n      }\r\n\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Add this at the end of your component\r\n  useEffect(() => {\r\n    if (redirectToHome) {\r\n      navigate(\"/\", { replace: true });\r\n    }\r\n  }, [redirectToHome]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    cpassword: \"\",\r\n  });\r\n\r\n  const handleSignupFormSubmit = async (e) => {\r\n    e.preventDefault(); // Prevent the default form submission behavior\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.post(\"https://innoriknews.onrender.com/signup\", {\r\n        name: formData.name,\r\n        email: formData.email,\r\n        password: formData.password,\r\n        cpassword: formData.cpassword,\r\n      });\r\n  \r\n      console.log(\"Server response:\", response.data);\r\n      toast.success(\"Signup successful. Please log in.\");\r\n  \r\n      navigate(\"/user\");\r\n      setFormData({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        cpassword: \"\",\r\n      });\r\n      setError(\"\");\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 409) {\r\n        toast.error(\"Email already registered\");\r\n      } else if (error.response && error.response.status === 401) {\r\n        toast.error(\"Password does not match\");\r\n      } else {\r\n        toast.error(\"Error signing up:\", error.message);\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n   <div></div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}